import {
  Flex,
  Form,
  Radio,
  SelectProps,
  RadioChangeEvent,
  Checkbox,
  Button,
  Switch,
} from "antd";
import * as React from "react";
import styled from "styled-components";
import BasicInput from "/@/components/input";
import BasicSelect from "/@/components/select";
import BasicInputNumber from "/@/components/inputNumber";
import { useMessage } from "/@/hooks/useMessage";
import useStores from "/@/hooks/useStores";
import { useIsMobile } from "/@/hooks/useIsMobile";

const Arrange: React.FC = () => {
  const [form] = Form.useForm();
  const { auth } = useStores();
  const isMobile = useIsMobile();
  const { success } = useMessage();

  const onFinish = async () => {
    try {
      const values = await form.validateFields();
      console.log("Êï∞ÊçÆ:", values);
      await auth.makePodcast(values);
      success("Êõ¥Êñ∞ÊàêÂäü");
    } catch (error) {
      console.log(error);
    } finally {
      // setLoading(false);
    }
  };

  const options: SelectProps["options"] = [
    { label: "Ââ™Ëæë", value: "Ââ™Ëæë" },
    { label: "Êï¥ÁêÜ", value: "Êï¥ÁêÜ" },
    { label: "Ê∑ªÂä†ÂÖÉÊï∞ÊçÆ", value: "Ê∑ªÂä†ÂÖÉÊï∞ÊçÆ" },
  ];

  const mainOptions: SelectProps["options"] = [
    { value: "podcast_m", label: "üéß ÁîüÊàêÊí≠ÂÆ¢Ê∫ê" },
    { value: "audio_clip_m", label: "üéπ Ââ™ËæëÈü≥È¢ë" },
    { value: "add_cover_m", label: "üñº ‰øÆÊîπÂ∞ÅÈù¢" },
    { value: "xmly_download", label: "‚¨áÔ∏è ‰∏ãËΩΩÂñúÈ©¨ÊãâÈõÖ" },
  ];

  // Áä∂ÊÄÅÂèòÈáèÔºåË∑üË∏™ÂΩìÂâçÈÄâÊã©ÁöÑÊìç‰Ωú
  const [selectedOperation, setSelectedOperation] = React.useState("podcast_m");
  const [isBook, setIsbook] = React.useState("audio_book");

  // ÂΩìÈÄâÊã©Êìç‰ΩúÊîπÂèòÊó∂ÁöÑÂ§ÑÁêÜÂáΩÊï∞
  const handleOperationChange = (value: any) => {
    setSelectedOperation(value);
  };

  const handleIsbookChange = (e: RadioChangeEvent) => {
    setIsbook(e.target.value);
  };

  return (
    <Content>
      <Form
        className="mt-[30px] max-w-[800px] mx-auto flex flex-col items-center"
        onFinish={onFinish}
        initialValues={{
          operate: selectedOperation,
          is_book_config: isBook,
          is_group: true,
          short_filename: true,
          deep: false,
        }}
      >
        <Form.Item className="w-full" name="operate">
          <BasicSelect
            options={mainOptions}
            placeholder="ÈÄâÊã©Êìç‰Ωú"
            onChange={handleOperationChange}
          />
        </Form.Item>

        {/* ‰ΩøÁî® switch ËØ≠Âè•Ê†πÊçÆ operate Êù•Â±ïÁ§∫‰∏çÂêåÁöÑËÆæÁΩÆÈ°π */}
        <div className="w-full">
          {(() => {
            switch (selectedOperation) {
              case "podcast_m":
                return (
                  <div>
                    <Form.Item name="is_book_config">
                      <Radio.Group
                        onChange={handleIsbookChange}
                        className="flex  gap-[24px]"
                      >
                        <Radio value={"audio_book"}>ÊúâÂ£∞‰π¶</Radio>
                        <Radio value={"music"}>Èü≥‰πê</Radio>
                        <Radio value={"auto_all"}>Â≠òÈáèÊúâÂ£∞‰π¶</Radio>
                      </Radio.Group>
                    </Form.Item>
                    {/* ‰ΩøÁî® switch ËØ≠Âè•Ê†πÊçÆ isBook Êù•Â±ïÁ§∫‰∏çÂêåÁöÑËÆæÁΩÆÈ°π */}
                    <div className="w-full">
                      {(() => {
                        switch (isBook) {
                          case "audio_book":
                            return (
                              <div>
                                <Form.Item name="input_dirs">
                                  <BasicInput placeholder="ËæìÂÖ•Ë∑ØÂæÑ" />
                                </Form.Item>

                                <Form.Item className="flex-1" name="book_title">
                                  <BasicInput placeholder="‰π¶Âêç" />
                                </Form.Item>

                                <div
                                  className={`w-full ${
                                    isMobile ? "flex flex-col" : "flex flex-row"
                                  } ${isMobile ? "" : "gap-[20px]"}`}
                                >
                                  <Form.Item className="w-full" name="">
                                    <BasicInput placeholder="ÂéüËëó‰ΩúËÄÖ" />
                                  </Form.Item>
                                  <Form.Item className="w-full" name="reader">
                                    <BasicInput placeholder="ÊºîÊí≠ËÄÖ" />
                                  </Form.Item>
                                </div>
                                <div
                                  className={`w-full ${
                                    isMobile ? "flex flex-col" : "flex flex-row"
                                  } ${isMobile ? "" : "gap-[20px]"}`}
                                >
                                  <Form.Item
                                    className="w-full"
                                    name="art_album"
                                  >
                                    <BasicInput placeholder="‰∏ìËæëËâ∫ÊúØÂÆ∂ÔºàÊé®ËçêÂ°´ÂÜô‰π¶ÂêçÔºâ" />
                                  </Form.Item>
                                  <Form.Item className="w-full" name="subject">
                                    <BasicInput placeholder="È¢òÊùê" />
                                  </Form.Item>
                                </div>

                                <Flex
                                  justify="space-between"
                                  gap={"20px"}
                                  className="w-full"
                                >
                                  <Form.Item className="w-full" name="year">
                                    <BasicInput placeholder="ÂèëÂ∏ÉÂπ¥‰ªΩ" />
                                  </Form.Item>
                                </Flex>
                                <Form.Item
                                  className="w-full"
                                  name="podcast_summary"
                                >
                                  <BasicInput placeholder="ÁÆÄ‰ªã" />
                                </Form.Item>
                                {isMobile ? (
                                  <div>
                                    <Flex
                                      justify="space-between"
                                      gap={"20px"}
                                      className="w-full"
                                    >
                                      <span>Á¨¨‰∏ÄÂ≠£Âº∫Âà∂200ÈõÜ</span>
                                      <Form.Item
                                        name="is_group"
                                        valuePropName="checked"
                                      >
                                        <Switch />
                                      </Form.Item>
                                    </Flex>
                                    <Flex
                                      justify="space-between"
                                      gap={"20px"}
                                      className="w-full"
                                    >
                                      <span>Ê†πÊçÆÊñá‰ª∂Âêç‰ºòÂåñÊØèÈõÜÊ†áÈ¢ò</span>
                                      <Form.Item
                                        name="short_filename"
                                        valuePropName="checked"
                                      >
                                        <Switch />
                                      </Form.Item>
                                    </Flex>
                                    <Flex
                                      justify="space-between"
                                      gap={"20px"}
                                      className="w-full"
                                    >
                                      <span>Ê∑±Ë∑ØÂæÑ</span>
                                      <Form.Item
                                        name="deep"
                                        valuePropName="checked"
                                      >
                                        <Switch />
                                      </Form.Item>
                                    </Flex>
                                  </div>
                                ) : (
                                  <Flex gap={"32px"}>
                                    <Form.Item
                                      name="is_group"
                                      valuePropName="checked"
                                    >
                                      <StyledCheckbox>
                                        Á¨¨‰∏ÄÂ≠£Âº∫Âà∂200ÈõÜ
                                      </StyledCheckbox>
                                    </Form.Item>
                                    <Form.Item
                                      name="short_filename"
                                      valuePropName="checked"
                                    >
                                      <StyledCheckbox>
                                        Ê†πÊçÆÊñá‰ª∂Âêç‰ºòÂåñÊØèÈõÜÊ†áÈ¢ò
                                      </StyledCheckbox>
                                    </Form.Item>
                                    <Form.Item
                                      name="deep"
                                      valuePropName="checked"
                                    >
                                      <StyledCheckbox>Ê∑±Ë∑ØÂæÑ</StyledCheckbox>
                                    </Form.Item>
                                  </Flex>
                                )}
                              </div>
                            );

                          default:
                            return null;
                        }
                      })()}
                    </div>
                  </div>
                );
              case "audio_clip_m":
                return (
                  <div>
                    <Form.Item name="output_dir">
                      <BasicInput placeholder="ËæìÂá∫Ë∑ØÂæÑÔºåÈªòËÆ§ÔºöËæìÂÖ•Ë∑ØÂæÑ" />
                    </Form.Item>
                    <Form.Item name="cliped_folder">
                      <BasicInput placeholder="Ââ™ËæëÂêéÂ≠òÊîæË∑ØÂæÑÔºåÈªòËÆ§Ôºö‰π¶Âêç - ‰ΩúËÄÖ - ÊºîÊí≠ËÄÖ" />
                    </Form.Item>
                    <Flex justify="space-between" gap={"20px"}>
                      <Form.Item className="flex-1" name="audio_start">
                        <BasicInputNumber
                          controls={false}
                          placeholder="Ââ™ËæëÁâáÂ§¥ÔºåÂçï‰ΩçÔºöÁßí"
                        />
                      </Form.Item>
                      <Form.Item className="flex-1" name="audio_end">
                        <BasicInputNumber
                          controls={false}
                          placeholder="Ââ™ËæëÁâáÂ∞æÔºåÂçï‰ΩçÔºöÁßí"
                        />
                      </Form.Item>
                    </Flex>
                    <Form.Item className="flex-1" name="action">
                      <BasicSelect options={options} placeholder="ÈÄâÊã©Êìç‰Ωú" />
                    </Form.Item>
                    <Form.Item className="w-full" name="albums">
                      <BasicInput placeholder="‰∏ìËæëÔºåÁïôÁ©∫ÂàôËá™Âä®ÊåâÊØè100ÈõÜÂàíÂàÜ" />
                    </Form.Item>
                  </div>
                );
              case "add_cover_m":
                return (
                  <div>
                    <Form.Item name="tg_base_url">
                      <BasicInput placeholder="Telgram ÊúçÂä°Âô®Âú∞ÂùÄ" />
                    </Form.Item>
                  </div>
                );
              case "xmly_download":
                return (
                  <div>
                    <Form.Item name="tg_base_url">
                      <BasicInput placeholder="Telgram ÊúçÂä°Âô®Âú∞ÂùÄ" />
                    </Form.Item>
                  </div>
                );
              default:
                return null;
            }
          })()}
        </div>

        <Form.Item className="w-full">
          <Button
            onClick={onFinish}
            className="w-full shadow-none mb-[8px] text-[17px] font-bold"
            type="primary"
          >
            ËøêË°å
          </Button>
        </Form.Item>

        {/* <Form.Item className="w-full" name="id">
          <Radio.Group>
            <Radio value={"1"}>Èü≥È¢ëÂâ™Ëæë</Radio>
            <Radio value={"2"}>DIYÂÖÉÊï∞ÊçÆ</Radio>
            <Radio value={"3"}>Êï¥ÁêÜÊñá‰ª∂Â§π + DIYÂÖÉÊï∞ÊçÆ</Radio>
          </Radio.Group>
        </Form.Item> */}
      </Form>
    </Content>
  );
};

const Content = styled.div`
  margin: auto;
`;

const StyledCheckbox = styled(Checkbox)`
  .ant-checkbox-inner {
    width: 20px; /* ÊàñÂÖ∂‰ªñ‰Ω†ÊÉ≥Ë¶ÅÁöÑÂ§ßÂ∞è */
    height: 20px; /* ÊàñÂÖ∂‰ªñ‰Ω†ÊÉ≥Ë¶ÅÁöÑÂ§ßÂ∞è */
  }
  .ant-checkbox-inner::after {
    left: 5px; /* Ë∞ÉÊï¥ÂØπÂè∑ÁöÑÂ∑¶ËæπË∑ù */
    top: 9px; /* Ë∞ÉÊï¥ÂØπÂè∑ÁöÑÈ°∂ÈÉ®ËæπË∑ù */
    width: 7px; /* Ë∞ÉÊï¥ÂØπÂè∑ÁöÑÂÆΩÂ∫¶ */
    height: 12px; /* Ë∞ÉÊï¥ÂØπÂè∑ÁöÑÈ´òÂ∫¶ */
    // ÂèØËÉΩËøòÈúÄË¶ÅË∞ÉÊï¥ transform Â±ûÊÄßÊù•Á°Æ‰øùÂØπÂè∑Â±Ö‰∏≠
  }
`;

export default Arrange;
